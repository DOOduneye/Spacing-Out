// What should you be able to do with a flash card
    // What is a flash card

    1) You take in a question
    1.5) Question type
    2) You take in an answer -> What type of answer

// Types of flash cards questions

1) True, false
2) Question answer
    1) Short response
    2) Long response
3) Multiple choice

-> Replace Answer Interface with an enum -> Takes advantage of HashMaps, more efficient

 * HashMap<String, AnswerType> answers = new HashMap<String, AnswerType>();
 * answers.put("A", AnswerType.CORRECT);
 * answers.put("B", AnswerType.INCORRECT);
 * answers.put("C", AnswerType.INCORRECT);
 * answers.put("D", AnswerType.INCORRECT);
 * answers.put("E", AnswerType.CORRECT);


 Handle a question with a hashmap

-----------------------
How to initalize a question
Question question = new Question.QuestionBuilder()
    .setQuestion("What is the capital of France?")
    .setAnswer("Paris", AnswerType.CORRECT)
    .setAnswer("London", AnswerType.INCORRECT)
    .setAnswer("Berlin", AnswerType.INCORRECT).build();

Questions2 question2 = new Questions2.QuestionBuilder()
    .setQuestion("What is the capital of UK?")
    .setAnswer("London", AnswerType.CORRECT)
    .setAnswer("Paris", AnswerType.INCORRECT)
    .setAnswer("Berlin", AnswerType.INCORRECT).build();

How to initialize a deck of questions
Deck deck = new Deck.DeckBuilder().name("Capitals").description("Capitals of the world").build();
deck.addQuestions(question);
deck.addQuestions(question2);

List<Deck> decks = new ArrayList<Deck>();
decks.add(deck);


